@page "{PriorityNumber:int}/{userId:Guid}";
@model MajorSelection.Pages.Users.MajorsList
@{
}

<div class="bg-secondary bg-opacity-10 py-2 mb-5">
    <div class="container">
        <h1>Majors</h1>
    </div>
</div>

<partial name="_Notification">

    @if (Model.Majors != null && Model.Majors.Any())
    {
        <div class="container">
            <div class="justify-content-center">
                <form class="needs-validation" novalidate>
                    <div class="form-row">
                        <div class="col-md-4 mb-3">
                            <label for="SerialNumber">Serial Number</label>
                            <input type="number" class="form-control" id="SerialNumber">
                        </div>

                        <div class="col-md-4 mb-3">
                            <label for="Name">Name</label>
                            <input type="text" class="form-control" id="Name">
                        </div>

                        <div class="col-md-4 mb-3">
                            <label for="UniversityName">University Name</label>
                            <input type="text" class="form-control" id="UniversityName">
                        </div>

                        <div class="col-md-4 mb-3">
                            <div class="input-group mb-3">
                                <div class="input-group-prepend">
                                    <label class="input-group-text" for="Sex">Sex</label>
                                </div>
                                <select class="custom-select" id="Sex">
                                    @{
                                        int i = 0;
                                        foreach (var sex in Enum.GetValues(typeof(MajorSelection.Enums.MajorSex)))
                                        {
                                            <option value="@i">@sex</option>
                                            i++;
                                        }
                                    }
                                </select>
                            </div>
                        </div>

                        <div class="form-row">
                            <div class="col-md-6 mb-3">
                                <label for="placeOfDuty" class="form-label">Place Of Duty</label>
                                <input type="text" class="form-control" id="placeOfDuty">

                            </div>
                        </div>


                        <div class="input-group mb-3">
                            <div class="input-group-prepend">
                                <label class="input-group-text" for="status">Status</label>
                            </div>
                            <select class="custom-select" id="status">
                                @{
                                    int j = 0;
                                    foreach (var status in Enum.GetValues(typeof(MajorSelection.Enums.MajorStatus)))
                                    {
                                        <option value="@j">@status</option>
                                        j++;
                                    }
                                }
                            </select>
                        </div>
                    </div>
                </form>
            </div>
        </div>


        <div class="container">
            <table class="table">
                <thead>
                    <tr>
                        <td>SerialNumber</td>
                        <td>Name</td>
                        <td>University Name</td>
                        <td>Capacity</td>
                        <td>Sex</td>
                        <td>PlaceOfDuty</td>
                        <td>Status</td>
                        <td> </td>
                    </tr>
                </thead>
                <tbody id="tableMajors">
                </tbody>
            </table>
        </div>
    }
    else
    {
        <div class="container">
            <p>No Majors were found!</p>
        </div>
    }

    @section Scripts{
        <script>
            let majors = @Json.Serialize(Model.Majors);
            const SerialNumber = document.getElementById("SerialNumber")
            SerialNumber.addEventListener("keyup", search)
            const Name = document.getElementById("Name")
            Name.addEventListener("keyup", search)
            const Sex = document.getElementById("Sex")
            Sex.addEventListener("change", search)
            const UniversityName = document.getElementById("UniversityName")
            UniversityName.addEventListener("keyup", search)
            const placeOfDuty = document.getElementById("placeOfDuty")
            placeOfDuty.addEventListener("keyup", search)
            const status = document.getElementById("status")
            status.addEventListener("change", search)

            document.addEventListener("DOMContentLoaded", (e) => { load(majors) });

            function load(majors) {
                let s = ""
                document.getElementById("tableMajors").innerHTML = s;
                for (let i = 0; i < majors.length; i++) {
                    s += `<tr>
                            <td>${majors[i].serialNumber}</td>
                            <td>${majors[i].name}</td>
                            <td>${majors[i].uniName}</td>
                            <td>${majors[i].capacity}</td>
                            <td>${majors[i].sex}</td>
                            <td>${majors[i].placeOfDuty}</td>
                            <td>${majors[i].status}</td>

                            <td><a href="/Users/SelectMajor/@Model._PriorityNumber/${majors[i].id}/@Model.UserId">Select</a></td>
                            </tr>`
                }
                document.getElementById("tableMajors").innerHTML = s;
            }

            function search() {
                const filtered = majors.filter((x) => {
                    let res = (String(x.serialNumber).includes(String(SerialNumber.value))) &&
                        (x.name.includes(Name.value)) && (x.universityName.includes(UniversityName.value)) &&
                        (x.placeOfDuty.includes(placeOfDuty.value)) && String(x.sex) == Sex.value &&
                        String(x.status) == status.value;

                    return res;
                })
                load(filtered);
            }
        </script>
    }
